---
#Downland necessary jars using maven
#- name: Maven Magellan
#  maven_artifact:
#    group_id: "{{ magellan_groupId }}"
#    artifact_id: "{{ magellan_artifactId }}"
#    version: "{{ magellan_version }}"
#    repository_url: "{{ magellan_maven_url }}"
#    dest: "{{ spark_usr_dir }}/jars/magellan-{{ magellan_version }}.jar"
#    validate_certs: no

- name: Get Magellan
  get_url: url="https://dl.bintray.com/spark-packages/maven/{{ magellan_groupId }}/{{ magellan_artifactId }}/{{ magellan_version }}/{{ magellan_artifactId }}-{{ magellan_version }}.jar"
           dest="{{ spark_usr_dir }}/jars/magellan-{{ magellan_version }}.jar"

# Install MassivePotree Converter

- name: Install pycoeman
  pip: name=pycoeman executable=pip3
  tags:
    - massivepotree_converter

- stat: path="{{ emma_modules_dir }}/LAStools_src"
  register: lastools_src_dir
  tags:
    - massivepotree_converter

- name: Download LAStools sources
  git:
    repo: https://github.com/m-schuetz/LAStools.git
    dest: "{{ emma_modules_dir }}/LAStools_src"
    update: no
  when: lastools_src_dir.stat.exists is defined and not lastools_src_dir.stat.exists
  tags:
    - massivepotree_converter

- name: Install LASzip
  shell: "cd {{ emma_modules_dir }}/LAStools_src/LASzip && rm -fr build && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make"
  when: lastools_src_dir.stat.exists is defined and not lastools_src_dir.stat.exists
  tags:
    - massivepotree_converter

- stat: path="{{ emma_modules_dir }}/PotreeConverter"
  register: potreeconverter_dir
  tags:
    - massivepotree_converter

- name: Download PotreeConverter
  git:
    repo: https://github.com/potree/PotreeConverter.git
    dest: "{{ emma_modules_dir }}/PotreeConverter"
    update: no
  when: potreeconverter_dir.stat.exists is defined and not potreeconverter_dir.stat.exists
  tags:
    - massivepotree_converter

- name: Install PotreeConverter
  shell: "cd {{ emma_modules_dir }}/PotreeConverter &&  rm -fr build && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release -DLASZIP_INCLUDE_DIRS={{ emma_modules_dir }}/LAStools_src/LASzip/dll -DLASZIP_LIBRARY={{ emma_modules_dir }}/LAStools_src/LASzip/build/src/liblaszip.so .. && make"
  when: potreeconverter_dir.stat.exists is defined and not potreeconverter_dir.stat.exists
  tags:
    - massivepotree_converter

#- name: Add PotreeConverter bin dir to system-wide $PATH.
#  copy:
#    dest: /etc/profile.d/custom-path.sh
#    content: 'PATH=$PATH:{{ emma_modules_dir }}/PotreeConverter/build/PotreeConverter:{{ emma_modules_dir }}/LAStools/bin/'
#  tags:
#    - massivepotree_converter

- stat: path="{{ emma_modules_dir }}/MassivePotreeConverter"
  register: massivepotree_converter_dir
  tags:
    - massivepotree_converter

- name: Download MassivePotree Converter
  git:
    repo: https://github.com/NLeSC/Massive-PotreeConverter.git
    dest: "{{ emma_modules_dir }}/MassivePotreeConverter"
    update: no
  when: massivepotree_converter_dir.stat.exists is defined and not massivepotree_converter_dir.stat.exists
  tags:
    - massivepotree_converter

- name: Install MassivePotree Converter
  pip:
    requirements: requirements.txt
    chdir: '{{ emma_modules_dir }}/MassivePotreeConverter'
    state: latest
    executable: pip3
  environment:
    PATH: $PATH:{{ ansible_env.PATH }}:{{ emma_modules_dir }}/PotreeConverter/build/PotreeConverter:{{ emma_modules_dir }}/LAStools/bin
  #when: massivepotree_converter_dir.stat.exists is defined and not massivepotree_converter_dir.stat.exists
  tags:
    - massivepotree_converter

# Install laserchicken

- stat: path="{{ emma_modules_dir }}/python/laserchicken"
  register: laserchicken_dir

- name: Download laserchicken
  git:
    repo: https://github.com/eEcoLiDAR/laserchicken.git
    dest: "{{ emma_modules_dir }}/python/laserchicken"
    version: development
    update: no
  when: laserchicken_dir.stat.exists is defined and not laserchicken_dir.stat.exists

- name: Install laserchicken
  shell: "cd {{ emma_modules_dir }}/python/laserchicken &&  pip install ."
  when: laserchicken_dir.stat.exists is defined and not laserchicken_dir.stat.exists

# Install Python modules
- name: Python modules for Python 3
  pip: name={{ item }} executable=pip3
  with_items:
    - shapely
    - pathlib
    - laspy
    - seaborn

# Install rclone
- name: Install fuse
  apt: name=fuse

- name: update fuse conf
  lineinfile:
    dest: /etc/fuse.conf
    regexp: '#user_allow_other'
    line: 'user_allow_other'
    backrefs: yes

- name: Install man-db
  apt: name=man-db

- stat: path="{{ emma_modules_dir }}/rclone-current-linux-amd64.zip"
  register: rclone_dir

- name: Get rclone
  get_url: url="https://downloads.rclone.org/rclone-current-linux-amd64.zip"
           dest="{{ emma_modules_dir }}/rclone-current-linux-amd64.zip"
  when: rclone_dir.stat.exists is defined and not rclone_dir.stat.exists

- name: Install rclone
  shell: "cd {{ emma_modules_dir }} && unzip rclone-current-linux-amd64.zip && cd rclone-*-linux-amd64 && sudo cp rclone /usr/bin/ && sudo chown root:root /usr/bin/rclone && sudo chmod 755 /usr/bin/rclone && sudo mkdir -p /usr/local/share/man/man1 && sudo cp rclone.1 /usr/local/share/man/man1/ && sudo mandb"
  when: rclone_dir.stat.exists is defined and not rclone_dir.stat.exists

- name: Make sure rclone dir exists
  file: path="/data/local/{{ lookup('env', 'CLUSTER_NAME') }}/rclone" state=directory group=users owner=ubuntu mode=g+rw
  when: rclone_dir.stat.exists is defined and not rclone_dir.stat.exists

- name: Make sure rclone tmp dir exists
  file: path="/data/local/{{ lookup('env', 'CLUSTER_NAME') }}/rclone/tmp" state=directory group=users owner=ubuntu mode=g+rw
  when: rclone_dir.stat.exists is defined and not rclone_dir.stat.exists

- stat: path="/data/local/eecolidar_webdav"
  register: webdab_dir

- name: Make sure eecolidar_webdab dir exists
  file: path="/data/local/eecolidar_webdav" state=directory group=users owner=ubuntu mode=g+rw
  when: webdab_dir.stat.exists is defined and not webdab_dir.stat.exists
